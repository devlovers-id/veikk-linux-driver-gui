#include "veikkconfig.h"
#include "ui_main.h"
#include "qpressurecurvescene.h"
#include "qscreenmapscene.h"
#include <QScreen>
#include <QGuiApplication>

// set up widgets, hook up handlers
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow{parent}, ui{new Ui::MainWindow} {
    qint8 i;

    // basic ui setup (auto-generated by qt designer)
    ui->setupUi(this);

    screen = QGuiApplication::screens().first();
    connect(screen, SIGNAL(geometryChanged(QRect)),
            this, SLOT(screenSizeChanged(QRect)));

    tabWidget = findChild<QTabWidget *>("tab_widget");
    connect(tabWidget, SIGNAL(currentChanged(int)),
            this, SLOT(tabChanged(int)));

    pressureCurveView = findChild<QGraphicsView *>("pressure_curve_view");
    pressureCurveView->setScene(new QPressureCurveScene{});
    pressureCurveView->scale(1, -1);
    connect(pressureCurveView->scene(), SIGNAL(updatePressureForm(qint16 *)),
            this, SLOT(updatePressureForm(qint16 *)));
    connect(this, SIGNAL(updatePressureCurve(qint16 *)),
            pressureCurveView->scene(), SLOT(updatePressureCurve(qint16 *)));

    screenMapView = findChild<QGraphicsView *>("screen_map_view");
    screenMapView->setScene(new QScreenMapScene{screen});
    connect(screenMapView->scene(), SIGNAL(updateScreenMapForm(QRect)),
            this, SLOT(updateScreenMapForm(QRect)));
    connect(this, SIGNAL(updateScreenMapRect(QRect)),
            screenMapView->scene(), SLOT(updateScreenMapRect(QRect)));

    for(i=0; i<4; i++) {
        pressureCoefSpinboxes[i] = findChild<QDoubleSpinBox *>
                                    ("pressure_coef_a" + QString::number(i));
        connect(pressureCoefSpinboxes[i], SIGNAL(valueChanged(double)),
                this, SLOT(updatePressureCoefs()));
    }

    screenMapSpinboxes[0] = screenMapXSpinBox = findChild<QSpinBox *>
                                                    ("screen_map_x");
    screenMapSpinboxes[1] = screenMapYSpinBox = findChild<QSpinBox *>
                                                    ("screen_map_y");
    screenMapSpinboxes[2] = screenMapWidthSpinBox = findChild<QSpinBox *>
                                                    ("screen_map_width");
    screenMapSpinboxes[3] = screenMapHeightSpinBox = findChild<QSpinBox *>
                                                    ("screen_map_height");
    screenWidthLineEdit = findChild<QLineEdit *>("screen_width");
    screenHeightLineEdit = findChild<QLineEdit *>("screen_height");
    screenDefaultMap = findChild<QCheckBox *>("screen_default_map");
    connect(screenDefaultMap, SIGNAL(stateChanged(int)),
            this, SLOT(setDefaultScreenMap(int)));
    for(i=0; i<4; i++)
        connect(screenMapSpinboxes[i], SIGNAL(editingFinished()),
            this, SLOT(updateScreenMapParms()));
    screenSizeChanged(screen->geometry());
    updateScreenMapForm(screen->geometry());
}

MainWindow::~MainWindow() {
    delete ui;
}

// resize elements on startup, see: https://stackoverflow.com/questions/9858971
void MainWindow::showEvent(QShowEvent *evt) {
    pressureCurveView->fitInView(pressureCurveView->sceneRect());
    screenMapView->fitInView(screenMapView->sceneRect(), Qt::KeepAspectRatio);
    QWidget::showEvent(evt);
}

void MainWindow::resizeEvent(QResizeEvent *evt) {
    screenMapView->fitInView(screenMapView->sceneRect(), Qt::KeepAspectRatio);
    QWidget::resizeEvent(evt);
}

void MainWindow::screenSizeChanged(QRect newScreenSize) {
    screenWidthLineEdit->setText(QString::number(newScreenSize.width()));
    screenHeightLineEdit->setText(QString::number(newScreenSize.height()));

    // fitInView() only works if sceneRect is within scene's sceneRect,
    // so resize scene's sceneRect first
    screenMapView->scene()->setSceneRect(screen->geometry());
    screenMapView->fitInView(screenMapView->scene()->sceneRect());
}

void MainWindow::tabChanged(int curTab) {
    switch(curTab) {
    case 0: // screen map
        screenMapView->fitInView(screenMapView->sceneRect(),
                                 Qt::KeepAspectRatio);
        break;
    case 1: // pressure map
        pressureCurveView->fitInView(pressureCurveView->sceneRect());
        break;
    }
}

void MainWindow::updatePressureForm(qint16 *newCoefs) {
    qint8 i;
    for(i=0; i<4; i++) {
        pressureCoefSpinboxes[i]->blockSignals(true);
        pressureCoefSpinboxes[i]->setValue(newCoefs[i]/100.0);
        pressureCoefSpinboxes[i]->blockSignals(false);
    }
}

void MainWindow::updatePressureCoefs() {
    qint8 i;
    qint16 newCoefs[4];
    for(i=0; i<4; i++)
        newCoefs[i] = qint16(pressureCoefSpinboxes[i]->value()*100);
    emit updatePressureCurve(newCoefs);
}

void MainWindow::updateScreenMapForm(QRect newScreenMap) {
    qint8 i;
    for(i=0; i<4; i++)
        screenMapSpinboxes[i]->blockSignals(true);
    screenMapXSpinBox->setValue(newScreenMap.x());
    screenMapYSpinBox->setValue(newScreenMap.y());
    screenMapWidthSpinBox->setValue(newScreenMap.width());
    screenMapHeightSpinBox->setValue(newScreenMap.height());
    for(i=0; i<4; i++)
        screenMapSpinboxes[i]->blockSignals(false);
    screenDefaultMap->setCheckState(newScreenMap==screen->geometry()
                                    ? Qt::Checked
                                    : Qt::Unchecked);
}

void MainWindow::updateScreenMapParms() {
    QRect newScreenMap = QRect{
        screenMapXSpinBox->value(),
        screenMapYSpinBox->value(),
        screenMapWidthSpinBox->value(),
        screenMapHeightSpinBox->value()
    };
    screenDefaultMap->setCheckState(newScreenMap==screen->geometry()
                                    ? Qt::Checked
                                    : Qt::Unchecked);
    emit updateScreenMapRect(newScreenMap);
}

void MainWindow::setDefaultScreenMap(int checkState) {
    if(checkState == Qt::Unchecked)
        return;
    updateScreenMapForm(screen->geometry());
    emit updateScreenMapRect(screen->geometry());
}
